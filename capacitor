#!/usr/bin/python

import argparse
from findcomponent import FindComponent

parser = argparse.ArgumentParser()

def strip_right_F(s):
    s = s.rstrip()
    assert s.endswith('F')
    return s[:-1]

parser.add_argument('capacitance', metavar='CAPACITANCE', type=str, help='capacitance (example: 100n)')
parser.add_argument('--at-least', action='store_const', const=True, default=False, help='allow higher capacitances')
parser.add_argument('--tolerance', metavar='TOLERANCE', type=float, help='tolerance in percent (default: 10)', default=10)
parser.add_argument('--voltage', metavar='MINIMUM_VOLTAGE', type=float, help='minimum voltage (default: 10)', default=10)
parser.add_argument('--package', metavar='PACKAGE', type=str, help='package / case (default: 0603) (use ANY for any)', default='0603')
parser.add_argument('--coefficient', metavar='COEFFICIENT', type=str, help='temperature coefficient (default: ANY) (use ANY for any)', default='ANY')

args = parser.parse_args()
find = FindComponent()
find.capacitor(args)

